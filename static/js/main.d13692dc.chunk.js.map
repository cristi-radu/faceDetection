{"version":3,"sources":["components/Logo/logo.png","components/Navigation/Navigation.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/FaceRecognition/FaceRecognition.js","components/Signin/Signin.js","components/Register/Register.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Logo","options","max","height","width","alt","src","brain","ImageLinkForm","onInputChange","onSubmit","type","onChange","Rank","FaceRecognition","imgUrl","box","console","log","id","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Signin","htmlFor","name","value","Register","app","Clarifai","App","apiKey","particlesOptions","particles","number","density","enable","value_area","interactivity","onhover","mode","detect_on","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","setState","event","input","target","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","route","params","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d13692dc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.9fda4841.png\";","import React from 'react';\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n        if (isSignedIn) {\r\n        return (\r\n            <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                <p onClick={() => onRouteChange('signout')} className='f3 link dim black underline p3 pointer'>Sign out</p>\r\n            </nav>\r\n        )\r\n    } else {\r\n        return (\r\n            <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                <p onClick={() => onRouteChange('signin')} className='f3 link dim black underline p3 pointer ma3'>Sign in</p>\r\n                <p onClick={() => onRouteChange('register')} className='f3 link dim black underline p3 pointer ma3'>  Register</p>\r\n            </nav>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React from 'react'\r\nimport Tilt from 'react-tilt'\r\nimport './Logo.css'\r\nimport brain from './logo.png'\r\n\r\nconst Logo=()=>{\r\n\r\n    return(\r\n        <div className='ma4 mt0'>\r\n            <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 55 }} style={{ height: 150, width: 150 }} >\r\n                <div className=\"Tilt-inner\"> <img alt='logo'src={brain}/> </div>\r\n            </Tilt>\r\n        </div>\r\n    );\r\n\r\n    \r\n\r\n}\r\n\r\nexport default Logo;","import React from 'react'\r\nimport './ImageLinkForm.css'\r\n\r\nconst ImageLinkForm=({onInputChange,onSubmit})=>{\r\n    return(\r\n        <div>\r\n           <p className=' white f3'>{'This magic brain will detect faces in your pictures. Give it a try!'}</p>\r\n           <div className='center'>\r\n               <div className='pa4 br3 shadow-5 center form'>\r\n                  <input className='f4 pa2 w-70 center' type='text' onChange={onInputChange}/>\r\n                  <button className='w-30 grow link f4 ph3 pv2 dib white bg-blue' onClick={onSubmit}>Detect</button>\r\n               </div>\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react'\r\n\r\nconst Rank= () =>{\r\n    return(\r\n        <div>\r\n            <div className='white f3'>\r\n                {'Cristi, you curent rank is ...'}\r\n            </div>\r\n            <div className='white f1'>\r\n                {'#5'}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rank;","import React from 'react'\r\nimport './FaceRecognition.css'\r\n\r\nconst FaceRecognition=({imgUrl,box})=>{\r\n    console.log(box);\r\n    return(\r\n        <div className='center ma'>\r\n            <div className='absolute mt2'>\r\n               <img id='inputimage' alt=''src={imgUrl} width='500px' height='auto'/>\r\n               <div className='bounding-box' style={{top: box.topRow ,right: box.rightCol ,bottom: box.bottomRow ,left: box.leftCol}}></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react'\r\n\r\nconst Signin = ({onRouteChange}) => {\r\n    return (\r\n        <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n            <main className=\"pa4 black-80\">\r\n                <div className=\"measure\">\r\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                        <legend className=\"f1 fw6 white ph0 mh0\">Sign In</legend>\r\n                        <div className=\"mt3\">\r\n                            <label className=\"db fw6 lh-copy white f6\" htmlFor=\"email-address\">Email</label>\r\n                            <input className=\"pa2 input-reset ba bg-transparent white hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\" id=\"email-address\" />\r\n                        </div>\r\n                        <div className=\"mv3\">\r\n                            <label className=\"db fw6 lh-copy f6 white\" htmlFor=\"password\">Password</label>\r\n                            <input className=\"b pa2 input-reset ba white bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\" id=\"password\" />\r\n                        </div>\r\n                    </fieldset>\r\n                    <div className=\"\">\r\n                        <input onClick={()=>onRouteChange('home')} className=\"b white ph3 pv2 input-reset ba b--white bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Sign in\" />\r\n                    </div>\r\n                    <div className=\"lh-copy mt3\">\r\n                        <p onClick={()=>onRouteChange('register')} className=\"f6 pointer link dim white db\">Register</p>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </article>\r\n\r\n    )\r\n}\r\n\r\nexport default Signin;","import React from 'react'\r\n\r\nconst Register = ({ onRouteChange }) => {\r\n    return (\r\n        <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n            <main className=\"pa4 black-80\">\r\n                <div className=\"measure\">\r\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                        <legend className=\"f1 fw6 white ph0 mh0\">Register</legend>\r\n                        <div className=\"mt3\">\r\n                            <label className=\"db fw6 lh-copy white f6\" htmlFor=\"name\">Name</label>\r\n                            <input className=\"pa2 input-reset ba bg-transparent white hover-bg-black hover-white w-100\" type=\"text\" name=\"name\" id=\"name\" />\r\n                        </div>\r\n                        <div className=\"mt3\">\r\n                            <label className=\"db fw6 lh-copy white f6\" htmlFor=\"email-address\">Email</label>\r\n                            <input className=\"pa2 input-reset ba bg-transparent white hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\" id=\"email-address\" />\r\n                        </div>\r\n                        <div className=\"mv3\">\r\n                            <label className=\"db fw6 lh-copy f6 white\" htmlFor=\"password\">Password</label>\r\n                            <input className=\"b pa2 input-reset ba white bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\" id=\"password\" />\r\n                        </div>\r\n                    </fieldset>\r\n                    <div className=\"\">\r\n                        <input onClick={() => onRouteChange('home')} className=\"b white ph3 pv2 input-reset ba b--white bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Register\" />\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </article>\r\n\r\n    )\r\n}\r\n\r\nexport default Register;","import React, { Component } from 'react';\nimport './App.css';\nimport 'tachyons'\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo'\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm'\nimport Rank from './components/Rank/Rank'\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai'\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition'\nimport Signin from './components/Signin/Signin'\nimport Register from './components/Register/Register'\n\nconst app = new Clarifai.App({\n  apiKey: 'd7ba30ce68884a70b65bfbcb220815cf'\n});\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 150,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  },\n  interactivity: {\n    onhover: {\n      enable: true,\n      mode: 'grab'\n    },\n    detect_on: 'window'\n  }\n}\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imgUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n    }\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box)\n    this.setState({ box: box })\n  }\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value })\n  }\n\n  onSubmit = () => {\n    this.setState({ imgUrl: this.state.input })\n    app.models.predict(\n      Clarifai.FACE_DETECT_MODEL,\n      this.state.input)\n      .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n      .catch(err => console.log(err));\n  }\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState({ isSignedIn: false })\n    } else if (route === 'home') {\n      this.setState({ isSignedIn: true })\n    }\n    this.setState({ route: route })\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n          params={particlesOptions}\n        />\n        <Navigation isSignedIn={this.state.isSignedIn} onRouteChange={this.onRouteChange} />\n        {this.state.route === 'home'\n          ?\n          <div>\n            <Logo />\n            <Rank />\n            <ImageLinkForm onInputChange={this.onInputChange} onSubmit={this.onSubmit} />\n            <FaceRecognition imgUrl={this.state.imgUrl} box={this.state.box} />\n          </div>\n          : (this.state.route === 'signin')\n            ? <Signin onRouteChange={this.onRouteChange} />\n            : <Register onRouteChange={this.onRouteChange} />\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}